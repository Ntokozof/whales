version: 0.2
env:
  variables:
    DOCKERHUB_USERNAME: "fthwala2@oldmutual.com"
    DOCKERHUB_PASSWORD: "Thwalafelix19**"
phases:
  install:
    runtime-versions:
        nodejs: 20
    commands:
      - echo "Installing dependencies..."
      # - npm install

      - echo "Installing Docker and Docker Compose..."
      # - apt-get update -y
      # - apt-get install -y docker.io
      # - curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      # - chmod +x /usr/local/bin/docker-compose
      # - docker compose --version
      # - echo "Docker and Docker Compose installed."

      # - echo "Logging in to Docker Hub..."
      # - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      # - curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
      # - unzip sonar-scanner.zip
      # - export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin
      # - sonar-scanner --version

      # - echo "Installing SonarQube scanner..."
      # - npm install -g sonarqube-scanner # Install the SonarQube scanner globally
      # - echo "SonarQube scanner installed."

      # - echo "Installing Nexus IQ CLI..."
      # - curl -L https://download.sonatype.com/clm/scanner/nexus-iq-cli-1.138.0.jar -o nexus-iq-cli.jar # Download Nexus IQ CLI
      # - echo "Nexus IQ CLI installed."
      
  pre_build:
    commands:
      - echo "Running pre-build steps..."   

      - echo "Starting Docker services for SonarQube..."
      - docker-compose up -d
      - echo "Waiting for SonarQube to be ready..."
      - sleep 60

  build:
    commands:
      - echo "Packaging Lambda function..."
      - zip -r whales_secured.zip .

      # - echo "Running SonarQube analysis..."
      - cd /codebuild/output/src1361678487/src/github.com/Ntokozof/whales ls -l
      - mvn clean verify sonar:sonar \
          -Dsonar.projectKey=whales \
          -Dsonar.host.url=http://localhost:9001 \
          -Dsonar.login=sqp_bb0df34ea9deab512634758e4bda45cff91f006b


      # - echo "Running Nexus IQ scan..."
      # - curl -I 10.128.101.232
      # - java -jar nexus-iq-cli.jar \
      #     -i whales_secured \
      #     -s https://omlnexusiq.omapps.net:8070/
      #     -a Ms0WuL6r:DR6FFt9CpqO1VTo9vZ6DwYFhUEqkFBeaLmP4xHqDksz5 \
      #     -t build \
      #     -r whales_secured_report.xml .

  post_build:
    commands:
      - echo "Deploying to AWS Lambda..."
      - aws lambda update-function-code --function-name whales_secured --zip-file fileb://whales_secured.zip
      - echo "Deployment completed."
      
# artifacts:
#   type: zip
#   files:
#     - whales_secured.zip 
#     - outputtemplate.yaml



