version: 0.2
env:
  variables:
    GITHUB_TOKEN: "your-secrets-manager-key"  # Replace with your actual Secrets Manager key for GITHUB_TOKEN
    SONAR_TOKEN: "sqp_c3738b0e4478ac5889bd680c798150750e0b06a8"   # Replace with your actual Secrets Manager key for SONAR_TOKEN
    SONAR_HOST_URL: "http://127.0.0.1:9001" # Replace with your actual Secrets Manager key for SONAR_HOST_URL
phases:
  install:
    runtime-versions:
        nodejs: 20
    commands:
      - echo "Installing JDK 11 and dependencies..."
      - sudo apt-get update -y
      - sudo apt-get -qq install -y openjdk-11-jdk maven
      - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - export PATH=$JAVA_HOME/bin:$PATH
      # - echo "Java version: $(java -version)"
      
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - apt-get update && apt-get install -y unzip curl
      - curl -o sonar-scanner-cli.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner-cli.zip
      - mv sonar-scanner-4.7.0.2747-linux /opt/sonar-scanner
      - export PATH=$PATH:/opt/sonar-scanner/bin
    

  build:
    commands:
      - echo "Packaging Lambda function..."
      - zip -r whales_secured.zip .

      - echo "Running Maven build and SonarQube analysis..."
     
      - echo $SONAR_HOST_URL
      - echo $SONAR_TOKEN
      - sonar-scanner \
          -Dsonar.projectKey=whales 
          -Dsonar_host_url=$SONAR_HOST_URL \
          # -Dsonar.login=$SONAR_TOKEN
      - echo "Build and SonarQube analysis completed."

  

  post_build:
    commands:
      - echo "Deploying to AWS Lambda..."
      - aws lambda update-function-code --function-name whales_secured --zip-file fileb://whales_secured.zip
      - echo "Deployment completed."
      
# artifacts:
#   type: zip
#   files:
#     - whales_secured.zip 
#     - outputtemplate.yaml



