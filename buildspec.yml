version: 0.2
env:
  variables:
    GITHUB_TOKEN: "your-secrets-manager-key"  # Replace with your actual Secrets Manager key for GITHUB_TOKEN
    SONAR_TOKEN: "sqp_c3738b0e4478ac5889bd680c798150750e0b06a8"   # Replace with your actual Secrets Manager key for SONAR_TOKEN
    SONAR_HOST_URL: "http://localhost:9001" # Replace with your actual Secrets Manager key for SONAR_HOST_URL
phases:
  install:
    runtime-versions:
        nodejs: 20
    commands:
      - echo "Installing JDK 11 and dependencies..."
      - sudo apt-get update -y
      - sudo apt-get -qq install -y openjdk-11-jdk maven
      - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - export PATH=$JAVA_HOME/bin:$PATH
      # - echo "Java version: $(java -version)"
      
  pre_build:
    commands:
      - echo "Caching SonarQube and Maven packages..."
      - if [ -d ~/.sonar/cache ]; then echo "SonarQube cache exists"; else mkdir -p ~/.sonar/cache; fi
      - if [ -d ~/.m2 ]; then echo "Maven cache exists"; else mkdir -p ~/.m2; fi
      - echo "SonarQube and Maven cache directories are ready."
    

  build:
    commands:
      - echo "Packaging Lambda function..."
      - zip -r whales_secured.zip .

      - echo "Running Maven build and SonarQube analysis..."
      - ls -ls ./codebuild/output/src123456789/src/
      # - cp -rf ./codebuild/output/src123456789/src/ ./codebuild/output/src4270413279/src/github.com/Ntokozof/whales/
      - mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=whales \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN
      - echo "Build and SonarQube analysis completed."

  

  post_build:
    commands:
      - echo "Deploying to AWS Lambda..."
      - aws lambda update-function-code --function-name whales_secured --zip-file fileb://whales_secured.zip
      - echo "Deployment completed."
      
# artifacts:
#   type: zip
#   files:
#     - whales_secured.zip 
#     - outputtemplate.yaml



